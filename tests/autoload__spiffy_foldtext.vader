# tests/autoload__spiffy_foldtext.vader

#│ ▼1 │ Global setup
#└────┴──────────────
Execute (Globally useful function definitions): ▼2

  function! BasicSetup() "▼
    set foldmethod=marker
    set foldmarker=-v-,-^-
    50vsplit " A predictable width, important for this domain.
  endfunction "▲

  function! BasicTeardown() "▼
    quit " Close vertical split
  endfunction "▲

#│ ▼1 │ Basic Integration Tests
#└────┴─────────────────────────

Given (Basic 3 line fold): ▼2
  Some buffer content -v-
  
  -^-

Before:
  call BasicSetup()

After:
  call BasicTeardown()

Execute (confirm testing assumptions): ▼2
  AssertEqual 50, winwidth(0)

Execute (basic test): ▼2
  normal zM
  AssertEqual "Some buffer content -v-  ==========|    3 lines |=", foldtextresult(1)

#│ ▼1 │ Features
#└─┬──┴─┬────────
#  │ ▼2 │ On-the-fly foldtext changing
#  └────┴──────────────────────────────

Before: ▼3
  call BasicSetup()
  vertical resize 25

After: ▼3
  call BasicTeardown()

Given (Basic 3 line fold): ▼3
  Some buffer content -v-
  
  -^-

Execute (Change foldtext at runtime (buffer local)): ▼3
  let b:spiffy_format_string = "buffer local value."
  normal zRzM

  AssertEqual "buffer local value.------", foldtextresult(1)


Execute (Change foldtext at runtime (window local)): ▼3
  let w:spiffy_format_string = "window local value."
  normal zRzM

  AssertEqual "window local value.------", foldtextresult(1)


Execute (window local overrides buffer local): ▼3
  let w:spiffy_format_string = "window local value."
  let b:spiffy_format_string = "buffer local value."
  normal zRzM

  AssertEqual "window local value.------", foldtextresult(1)


# ▼1 modeline
# vim: set ts=2 sw=2 sts=2 et fdm=marker fmr=▼,▲ :

